$OpenBSD: patch-base_BUILD_gn,v 1.4 2017/07/23 19:03:33 robert Exp $
Index: base/BUILD.gn
--- base/BUILD.gn.orig
+++ base/BUILD.gn
@@ -1127,7 +1127,7 @@ component("base") {
   ]
 
   # Needed for <atomic> if using newer C++ library than sysroot
-  if (!use_sysroot && (is_android || (is_linux && !is_chromecast))) {
+  if (!use_sysroot && (is_android || (is_linux && !is_chromecast)) && !is_clang) {
     libs = [ "atomic" ]
   }
 
@@ -1508,6 +1508,27 @@ component("base") {
     }
   }
 
+  if (is_openbsd) {
+    sources -= [
+      "files/file_path_watcher_linux.cc",
+      "files/file_util_linux.cc",
+      "process/memory_linux.cc",
+      "process/process_linux.cc",
+      "sys_info_linux.cc",
+      "process/process_iterator_linux.cc",
+      "process/process_metrics_linux.cc",
+      "process/process_handle_linux.cc"
+    ]
+    sources += [
+      "process/memory_stubs.cc",
+      "process/process_handle_openbsd.cc",
+      "process/process_iterator_openbsd.cc",
+      "process/process_metrics_openbsd.cc",
+      "sys_info_openbsd.cc",
+      "files/file_path_watcher_stub.cc",
+    ]
+  }
+
   # iOS
   if (is_ios) {
     set_sources_assignment_filter([])
@@ -2338,6 +2359,8 @@ test("base_unittests") {
     # TODO(krasin): remove CFI_CAST_CHECK, see https://crbug.com/626794.
     defines += [ "CFI_CAST_CHECK" ]
   }
+
+  libs = [ "execinfo" ]
 }
 
 action("build_date") {
