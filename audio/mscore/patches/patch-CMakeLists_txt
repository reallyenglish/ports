$OpenBSD: patch-CMakeLists_txt,v 1.4 2017/07/06 08:01:09 bcallah Exp $
Index: CMakeLists.txt
--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -164,7 +164,7 @@ else (APPLE)
       set(CMAKE_EXE_LINKER_FLAGS "-Wl,--large-address-aware")
    else (MINGW)
       set(CMAKE_CXX_FLAGS_DEBUG   "-std=c++11 -fPIC -g")
-      set(CMAKE_CXX_FLAGS_RELEASE "-std=c++11 -fPIC -O2 -DNDEBUG -DQT_NO_DEBUG")
+      set(CMAKE_CXX_FLAGS_RELEASE "-std=c++11 -fPIC -DNDEBUG -DQT_NO_DEBUG")
    endif (MINGW)
 endif(APPLE)
 
@@ -268,13 +268,13 @@ endif (BUILD_ALSA)
 ## MIDI
 ##
 
-if (APPLE OR MINGW)
+if (APPLE OR MINGW OR UNIX)
       set (HAS_MIDI 1)
-else (APPLE OR MINGW)
+else (APPLE OR MINGW OR UNIX)
       if (USE_ALSA)
             set (HAS_MIDI 1)
       endif (USE_ALSA)
-endif (APPLE OR MINGW)
+endif (APPLE OR MINGW OR UNIX)
 
 ##
 ## pulseaudio
@@ -282,8 +282,8 @@ endif (APPLE OR MINGW)
 
 if (BUILD_PULSEAUDIO)
       if (PULSEAUDIO_FOUND)
-            set(USE_PULSEAUDIO 1)
-            message("Pulseaudio found. Pulseaudio support enabled.")
+            set(USE_PULSEAUDIO 0)
+            message("Pulseaudio support disabled.")
       else (PULSEAUDIO_FOUND)
             message(SEND_ERROR "Error: Pulseaudio support requested (BUILD_PULSEAUDIO=${BUILD_PULSEAUDIO}), but Pulseaudio was not found.")
       endif (PULSEAUDIO_FOUND)
@@ -544,7 +544,7 @@ if (NOT MINGW AND NOT APPLE)
             )
     endif (GZIP_EXECUTABLE AND NOT CMAKE_SYSTEM_NAME MATCHES "OpenBSD")
     # install man pages in either compressed or uncompressed form
-    install( FILES ${MAN_BUILD} DESTINATION share/man/man1 COMPONENT doc)
+    install( FILES ${MAN_BUILD} DESTINATION man/man1 COMPONENT doc)
     # create symlink alias for man pages so `man musescore` = `man mscore`
     find_program( LN_EXECUTABLE ln DOC "A tool for creating symbolic link aliases (optional)." )
     if (LN_EXECUTABLE)
@@ -555,7 +555,7 @@ if (NOT MINGW AND NOT APPLE)
             COMMAND ${LN_EXECUTABLE} -sf "${MAN_FULL_NAME}" "${MAN_FULL_ALIAS}"
             COMMAND echo 'Symlink alias: ${MAN_FULL_ALIAS} -> ${MAN_FULL_NAME}'
             )
-        install( FILES ${PROJECT_BINARY_DIR}/${MAN_FULL_ALIAS} DESTINATION share/man/man1 COMPONENT doc)
+        install( FILES ${PROJECT_BINARY_DIR}/${MAN_FULL_ALIAS} DESTINATION man/man1 COMPONENT doc)
      else (LN_EXECUTABLE)
          message(STATUS "ln not found (it is optional). No symlink aliases will be created.")
      endif (LN_EXECUTABLE)
@@ -578,7 +578,7 @@ add_custom_command(
     WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
     )
 if (NOT MINGW)
-  set(BUILD_PCH true)
+  set(BUILD_PCH false)
 endif(NOT MINGW)
 
 precompiled_header(QT_INCLUDES all ${BUILD_PCH})
@@ -663,18 +663,18 @@ include(Packaging)
 ##  custom target for translation generation
 ##
 
-add_custom_target(lupdate
+add_custom_target(lupdate-qt5
    COMMAND ${PROJECT_SOURCE_DIR}/build/gen-qt-projectfile ${PROJECT_SOURCE_DIR} > mscore.pro
-   COMMAND ${QT_LUPDATE_EXECUTABLE} ${PROJECT_BINARY_DIR}/mscore.pro
+   COMMAND lupdate-qt5 ${PROJECT_BINARY_DIR}/mscore.pro
    COMMAND ${PROJECT_SOURCE_DIR}/build/gen-instruments-projectfile ${PROJECT_SOURCE_DIR}/share/instruments > instruments.pro
-   COMMAND ${QT_LUPDATE_EXECUTABLE} ${PROJECT_BINARY_DIR}/instruments.pro
+   COMMAND lupdate-qt5 ${PROJECT_BINARY_DIR}/instruments.pro
    WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
    )
 
-add_custom_target(lrelease
+add_custom_target(lrelease-qt5
    COMMAND ${PROJECT_SOURCE_DIR}/build/gen-qt-projectfile ${PROJECT_SOURCE_DIR} > mscore.pro
    COMMAND ${PROJECT_SOURCE_DIR}/build/gen-qt-projectfile ${PROJECT_SOURCE_DIR}/share/instruments > instruments.pro
-   COMMAND ${QT_LRELEASE_EXECUTABLE} ${PROJECT_SOURCE_DIR}/share/locale/*.ts
+   COMMAND lrelease-qt5 ${PROJECT_SOURCE_DIR}/share/locale/*.ts
    WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
    )
 
