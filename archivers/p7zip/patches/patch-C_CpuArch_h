$OpenBSD: patch-C_CpuArch_h,v 1.3 2017/07/02 18:38:24 jca Exp $

Use <endian.h> to determine endianness, instead of a complex and 
incorrect list of architectures.

Index: C/CpuArch.h
--- C/CpuArch.h.orig
+++ C/CpuArch.h
@@ -5,6 +5,7 @@
 #define __CPU_ARCH_H
 
 #include "7zTypes.h"
+#include <endian.h>
 
 EXTERN_C_BEGIN
 
@@ -56,33 +57,9 @@ MY_CPU_LE_UNALIGN means that CPU is LITTLE ENDIAN and 
 #define MY_CPU_IA64_LE
 #endif
 
-#if defined(MY_CPU_X86_OR_AMD64) \
-    || defined(MY_CPU_ARM_LE) \
-    || defined(MY_CPU_IA64_LE) \
-    || defined(__LITTLE_ENDIAN__) \
-    || defined(__ARMEL__) \
-    || defined(__THUMBEL__) \
-    || defined(__AARCH64EL__) \
-    || defined(__MIPSEL__) \
-    || defined(__MIPSEL) \
-    || defined(_MIPSEL) \
-    || (defined(__BYTE_ORDER__) && (__BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__))
+#if BYTE_ORDER == LITTLE_ENDIAN
   #define MY_CPU_LE
-#endif
-
-#if defined(__BIG_ENDIAN__) \
-    || defined(__ARMEB__) \
-    || defined(__THUMBEB__) \
-    || defined(__AARCH64EB__) \
-    || defined(__MIPSEB__) \
-    || defined(__MIPSEB) \
-    || defined(_MIPSEB) \
-    || defined(__m68k__) \
-    || defined(__s390__) \
-    || defined(__s390x__) \
-    || defined(__zarch__) \
-    || defined(__sparc) \
-    || (defined(__BYTE_ORDER__) && (__BYTE_ORDER__ == __ORDER_BIG_ENDIAN__))
+#elif BYTE_ORDER == BIG_ENDIAN
   #define MY_CPU_BE
 #endif
 
